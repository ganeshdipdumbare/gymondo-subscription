basePath: '{{.BasePath}}'
definitions:
  rest.buySubscriptionRequest:
    properties:
      email_id:
        type: string
      product_id:
        type: string
    required:
    - email_id
    - product_id
    type: object
  rest.buySubscriptionResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      end_date:
        type: string
      id:
        type: string
      price:
        type: number
      product_name:
        type: string
      start_date:
        type: string
      status:
        type: string
      tax:
        type: number
    type: object
  rest.errorRespose:
    properties:
      errorMessage:
        type: string
    type: object
  rest.getAllProductsResponse:
    properties:
      products:
        items:
          $ref: '#/definitions/rest.getProductByIdResponse'
        type: array
    type: object
  rest.getProductByIdResponse:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
      subscription_period:
        type: integer
      tax_percentage:
        type: number
    type: object
  rest.getSubscriptionByIDResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      end_date:
        type: string
      id:
        type: string
      pause_start_date:
        type: string
      price:
        type: number
      product_name:
        type: string
      start_date:
        type: string
      status:
        type: string
      tax:
        type: number
      updated_at:
        type: string
    type: object
  rest.updateSubscriptionByIDResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      end_date:
        type: string
      id:
        type: string
      pause_start_date:
        type: string
      price:
        type: number
      product_name:
        type: string
      start_date:
        type: string
      status:
        type: string
      tax:
        type: number
      updated_at:
        type: string
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: A REST server to manage user subscriptions of the products
  license: {}
  title: Gymondo subscription api
  version: "1.0"
paths:
  /product:
    get:
      consumes:
      - application/json
      description: return feteched  products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.getAllProductsResponse'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
      summary: get all the products
      tags:
      - product-api
  /product/{id}:
    get:
      consumes:
      - application/json
      description: return feteched  product record for input id
      parameters:
      - description: product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.getProductByIdResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
      summary: get a product for given product id
      tags:
      - product-api
  /subscription:
    post:
      consumes:
      - application/json
      description: return created subscription record
      parameters:
      - description: create subscription request
        in: body
        name: buySubscriptionRequest
        required: true
        schema:
          $ref: '#/definitions/rest.buySubscriptionRequest'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.buySubscriptionResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
      summary: create a subscription for the user with given product
      tags:
      - subscription-api
  /subscription/{id}:
    get:
      consumes:
      - application/json
      description: return feteched  subscription record for input id
      parameters:
      - description: subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.getSubscriptionByIDResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
      summary: get a subscription for given subscription id
      tags:
      - subscription-api
  /subscription/{id}/changeStatus/{status}:
    put:
      consumes:
      - application/json
      description: update subscription with given status and returns updated subscription
      parameters:
      - description: subscription ID
        in: path
        name: id
        required: true
        type: string
      - description: status
        enum:
        - active
        - cancel
        - pause
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.updateSubscriptionByIDResponse'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorRespose'
            type: object
      summary: update subscription with given status
      tags:
      - subscription-api
swagger: "2.0"
